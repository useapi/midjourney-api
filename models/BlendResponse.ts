export class BlendResponse {
    /**
    * Use returned jobid value to retrieve job status and results
    */
    'jobid': string;
    'verb': BlendResponseVerbEnum;
    'status': BlendResponseStatusEnum;
    'created': string;
    'updated': string;
    'blendUrls': Array<string>;
    'blendDimensions'?: BlendResponseBlendDimensionsEnum;
    'channel': string;
    'server': string;
    'maxJobs': number;
    'messageId': string;
    /**
    * Contains message generated by Midjourney reflecting current generation parameters and progress
    */
    'content': string;
    'timestamp': string;
    'code': BlendResponseCodeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{ name: string, baseName: string, type: string, format: string }> = [
        {
            "name": "jobid",
            "baseName": "jobid",
            "type": "string",
            "format": ""
        },
        {
            "name": "verb",
            "baseName": "verb",
            "type": "BlendResponseVerbEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "BlendResponseStatusEnum",
            "format": ""
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "string",
            "format": ""
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "string",
            "format": ""
        },
        {
            "name": "blendUrls",
            "baseName": "blendUrls",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "blendDimensions",
            "baseName": "blendDimensions",
            "type": "BlendResponseBlendDimensionsEnum",
            "format": ""
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "string",
            "format": ""
        },
        {
            "name": "server",
            "baseName": "server",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxJobs",
            "baseName": "maxJobs",
            "type": "number",
            "format": ""
        },
        {
            "name": "messageId",
            "baseName": "messageId",
            "type": "string",
            "format": ""
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "string",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "BlendResponseCodeEnum",
            "format": ""
        }];

    static getAttributeTypeMap() {
        return BlendResponse.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum BlendResponseVerbEnum {
    Blend = 'blend'
}
export enum BlendResponseStatusEnum {
    Started = 'started'
}
export enum BlendResponseBlendDimensionsEnum {
    Portrait = 'Portrait',
    Square = 'Square',
    Landscape = 'Landscape'
}
export enum BlendResponseCodeEnum {
    NUMBER_200 = 200
}

